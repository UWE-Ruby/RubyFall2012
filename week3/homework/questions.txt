

1. What is a symbol?
<<<<<<< HEAD
A symbol is a static name or identifier.

2. What is the difference between a symbol and a string?
A string is a collection of characters whereas a string is a static identifier. A string is not static no matter what the contents of the string are. So the strings "hello" and "hello" are two different ojects, whereas the symbol :hello and :hello are the exact same object. If you think of 1 as a FixNum or fixed number, you can think of the symbol :hello as the "FixStr" or fixed string :hello.

3. What is a block and how do I call a block?
A block is an anonymous function, or some code snipt that you can define and then call at a later time. To call a block you can use the yield keyword.

4. How do I pass a block to a method? What is the method signature?
To pass a block to a method you define the block after the method call with either the curly bracket enclosure {} or the do/end syntax. An example of passing a block to the each method of an array:
=======
Symbols are names that start with a colon and are followed by some kind of name. Ex.  serene(:awesome)
Also, the use of the symbol guarantees that that wherever it appears in the program, the value will be the same.

2. What is the difference between a symbol and a string?
A symbol assigns value whereas a string holds data sequences within quote marks.

3. What is a block and how do I call a block?
A block is a chunk of code applied to methods (like parameters) and are called between braces or between do..end.  

4. How do I pass a block to a method? What is the method signature?
A block is passed into a method by placing the code in braces after the parameters. The method can call the block within it's parameters by using the yield method.

5. Where would you use regular expressions?
When there is a pattern that needs to be matched up against a string.
>>>>>>> f22446d7c1ea0cf75d26c958547a3d11b80f5fd7

my_array.each {|a| puts a}

Any method in Ruby can take a block. You can explicitly add a block to a method by putting an ampersand & before the variable name in the method definition. An example of this would be:

def my_method(&my_block)
	my_block.call
end

5. Where would you use regular expressions?
Regular expressions are used for pattern matching and replacement with strings. An example would be if I wanted to write a syntax checker for some text that checked if each sentance ended with a period, started with a space and then a capital letter. 
